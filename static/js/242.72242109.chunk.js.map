{"version":3,"file":"static/js/242.72242109.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Movie/Movie.module.css?e0b9","components/Movie/Movie.jsx","webpack://react-homework-template/./src/pages/Pages.module.css?6bb4","pages/MovieDatailsPage.js","servises/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Film\":\"Movie_Film__NgYOV\",\"Image\":\"Movie_Image__D3852\"};","import css from './Movie.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Movie = ({ film, year }) => {\n  const genres = film.genres;\n  return (\n    <div className={css.Film}>\n      <img\n        className={css.Image}\n          src={\n            film.backdrop_path\n              ? `https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/${film.backdrop_path}`\n              : 'https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg'\n          }\n      //   src={`https://image.tmdb.org/t/p/w1920_and_h800_multi_faces/${film.backdrop_path}`}\n        alt=\"\"\n      ></img>\n      <div className={css.Info}>\n        <h2 className={css.FilmTitle}>\n          {film.title} ({year})\n        </h2>\n        <p className={css.Score}>\n          User score: {Math.trunc(film.vote_average * 10)}%\n        </p>\n        <h3 className={css.Overview}>Overview</h3>\n        <p className={css.Overview}>{film.overview}</p>\n        <h4 className={css.Genres}>Genres</h4>\n        <p className={css.Genres}>\n          {genres &&\n            genres.map(item => <span key={item.id}> {item.name}</span>)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\n\nMovie.propTypes = {\n\tfilm: PropTypes.object.isRequired,\n\tyear: PropTypes.string.isRequired\n };","// extracted by mini-css-extract-plugin\nexport default {\"AdditionalInfoList\":\"Pages_AdditionalInfoList__kp+BT\",\"AdditionalInfo\":\"Pages_AdditionalInfo__c8mE+\",\"GoBackBtn\":\"Pages_GoBackBtn__sdo4Z\"};","import { Movie } from 'components/Movie/Movie';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport * as API from '../servises/api';\nimport css from './Pages.module.css';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState({});\n  const [releaseYear, setReleaseYear] = useState('');\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    API.fetchMovieDetails(movieId)\n      .then(response => {\n        setFilm(response);\n\n        if (film.release_date) {\n          const year = cutDate(film.release_date);\n          setReleaseYear(year);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [film.release_date, movieId]);\n\n  function cutDate(date) {\n    const regexp = /([0-9]{4}(?=-))/g;\n    const hits = date.match(regexp);\n    if (hits !== null) return hits[0];\n    return date;\n  }\n\n  return (\n    <>\n      {/* ===========optional chaining */}\n      <Link to={backLinkLocationRef.current}>\n        <button className={css.GoBackBtn}>‚Üê Go back</button>\n      </Link>\n\n      <Movie film={film} year={releaseYear} />\n      <div>\n        <p>Additional information</p>\n        <ul className={css.AdditionalInfoList}>\n          <li>\n            <Link to=\"cast\" className={css.AdditionalInfo}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" className={css.AdditionalInfo}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>LOADING...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '54ca32600b8d3533c486c2b7fe8c8efb';\n\nexport async function fetchPopularMovies() {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n\n//   console.log('responce-popular:', response.data);\n\n  return response.data;\n}\n\nexport async function fetchSerchedMovies(query, page) {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`\n  );\n//   console.log('responce-serched:', response.data.results);\n\n  return response.data.results;\n}\n\nexport async function fetchMovieDetails(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n//   console.log('responce-details:', response.data);\n\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n//   console.log('responce-cast:', response.data.cast);\n\n  return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id, page) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n//   console.log('responce-reviews:', response.data.results);\n\n  return response.data.results;\n}\n"],"names":["Movie","film","year","genres","className","css","src","backdrop_path","alt","title","Math","trunc","vote_average","overview","map","item","name","id","useState","setFilm","releaseYear","setReleaseYear","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","API","then","response","release_date","date","regexp","hits","match","cutDate","catch","error","console","log","to","current","Suspense","fallback","BASE_URL","API_KEY","fetchPopularMovies","axios","data","fetchSerchedMovies","query","page","results","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}